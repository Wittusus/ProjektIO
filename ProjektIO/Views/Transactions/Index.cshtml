@model IEnumerable<ProjektIO.Entities.Transactions>

@{
    ViewData["Title"] = "Index";
    var dataSource = Model.Select(x =>  new
    {
        Id = x.Id,
        Date = x.CreationTime,
        From = x.CreationUser.UserName,
        To = x.TargetUser.UserName,
        Type = x.TransactionType.ToString(),
        Amount = x.AmountOfTransaction,
        Hedgefund = x.Hedgefund != null ? x.Hedgefund.Name : "N/A",
        ReturnTimeOfInvestment = x.ReturnTimeOfInvestment
    });
}

<h1>Index</h1>

<p>
    
        @if (User.IsInRole("Admin"))
        {
        
        <a asp-action="Create">
            Create New</a>
        } else
        {
        <a class="btn btn-primary btn-lg" asp-action="Create">
            INVEST
        </a>
        }

        
        </a>
    <label>Balance: @ViewData["Balance"] </label>
</p>
@*<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Date
            </th>
            <th>
                From
            </th>
            <th>
                To
            </th>
            <th>
                Type
            </th>
            <th>
                Amount
            </th>
            <th>
                Hedgefund
            </th>
            <th>
                Return time of investment
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CreationTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreationUser.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TargetUser.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TransactionType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AmountOfTransaction)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hedgefund.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReturnTimeOfInvestment)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
            </td>
        </tr>
}
    </tbody>
</table>*@

<ejs-grid id="Grid" dataSource="dataSource" allowGrouping="true" allowSorting="true" allowFiltering="true" allowPaging="true" showColumnMenu="true"
          allowExcelExport="true" toolbarClick="toolbarClick" toolbar="@(new List<string>() { "ExcelExport" })">
    <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
    <e-grid-groupsettings showGroupedColumn="true"></e-grid-groupsettings>
    <e-grid-columns>
        <e-grid-column field="Date" headerText="Date" format='dd.MM.yyyy hh:mm'></e-grid-column>
        <e-grid-column field="From" headerText="From" ></e-grid-column>
        <e-grid-column field="To" headerText="To" ></e-grid-column>
        <e-grid-column field="Type" headerText="Type" ></e-grid-column>
        <e-grid-column field="Amount" headerText="Amount" ></e-grid-column>
        <e-grid-column field="Hedgefund" headerText="Hedgefund" ></e-grid-column>
        <e-grid-column field="ReturnTimeOfInvestment" headerText="ReturnTimeOfInvestment" format='dd.MM.yyyy'></e-grid-column>
        <e-grid-column headerText="Actions" template="#actions"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script id="actions" type="text/x-template">
            <a href="/Transactions/Details/${Id}">Details</a>
</script>

        <script>
    function toolbarClick(args) {
        var gridObj = document.getElementById("Grid").ej2_instances[0];
        if (args.item.id === 'Grid_excelexport') {
            gridObj.excelExport();
            
        }

    }
</script>